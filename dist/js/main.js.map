{"version":3,"file":"/js/main.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/js/main.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// document ready jquery\n(function ($) {\n\n    // constant vars\n    const form = $('#acf-img-set-post-thumb-form');\n\n    // updatable let vars\n    let data  = null;\n    let props = {};\n\n    /**\n     * acf image set post thumb form event handlers\n     * @param e\n    */\n    $(form).on('change', function(e) {\n\n        // event prevent default\n        e.preventDefault();\n\n        // update our vars\n        data = new FormData(this);\n        props = Object.fromEntries(data);\n\n        // if props has properties post_type and acf_image_field\n        if(Object.hasOwn(props,'post_type') && Object.hasOwn(props,'acf_image_field')) {\n\n            // enable submit button\n            $('[type=\"submit\"]',this).prop('disabled',false);\n\n        }\n\n    }).on('submit', function(e) {\n\n        // event prevent default\n        e.preventDefault();\n\n        // update our vars\n        data = new FormData(this);\n        props = Object.fromEntries(data);\n\n        // if confirm is confirmed\n        if (confirm('Are you sure you want to run this process?') === true) {\n\n            // ajax process images\n            process_images(props);\n\n        // else\n        } else {\n\n            // return false\n            return false;\n\n        }\n\n    });\n\n    /**\n     * process images js function\n     * @param props\n     * @param init\n     * @param count\n     * @param processed\n     * @param exclude\n     * @param done\n     */\n    function process_images(\n        props,\n        init = true,\n        count = 0,\n        processed = 0,\n        exclude = false,\n        done = false)\n    {\n\n        // jquery post ajax call\n        $.ajax({\n            cache: false,\n            timeout: 300000, // 5 hours\n            url: ajaxurl,\n            method: 'POST',\n            data: {\n                action: 'process_images',\n                security: acf_img_set_post_thumb_nonce,\n                props: props,\n                init: init,\n                count: count,\n                processed: processed,\n                exclude: exclude,\n                done: done\n            },\n            // success response\n            success: function (response) {\n\n                // let our response data\n                let data = response.data;\n\n                // if this is the initial process\n                if(data.init) {\n\n                    // disable submit button\n                    $('[type=\"submit\"]', form).prop('disabled',true);\n\n                    // empty logger\n                    $('.logger', form).empty();\n\n                    // reveal progress bar\n                    $('.progress-wrap', form).html('<div class=\"progress\"><div class=\"progress-bar\"></div></div>');\n\n                    // reveal progress and logger table rows\n                    $('.progress-row, .logger-row', form).removeClass('row-hide');\n\n                }\n\n                // progress bar processed percentage status\n                let progress_percent = Math.round(((100/data.count) * data.processed) * 10) / 10;\n\n                // if we are not done then run again\n                if(!data.done) {\n\n                    // if response is success\n                    if (response.success) {\n\n                        // update progress bar processed percentage status\n                        $('.progress-bar', form).width(progress_percent + '%').text(progress_percent + '%');\n\n                        // logger\n                        logger('success', data);\n\n                        // continue processing the acf image set post thumbnail function with our response data\n                        process_images(\n                            data.props,\n                            false,\n                            data.count,\n                            data.processed,\n                            data.exclude,\n                            data.done\n                        );\n\n                    } else {\n\n                        // empty logger\n                        $('.logger', form).empty();\n\n                        // hide progress table row\n                        $('.progress-row', form).addClass('row-hide');\n\n                        // reveal logger table row\n                        $('.logger-row', form).removeClass('row-hide');\n\n                        // logger\n                        logger('error', data);\n\n                    }\n\n                } else {\n\n                    // if response is success\n                    if (response.success) {\n\n                        // update progress bar processed percentage status\n                        $('.progress-bar', form).width(progress_percent + '%').text(progress_percent + '%');\n\n                        // logger\n                        logger('success', data);\n\n                    } else {\n\n                        // logger\n                        logger('error', data);\n\n                    }\n\n                }\n\n            },\n            // error response\n            error: function (response) {\n\n                // let our response data\n                let data = response.data;\n\n                // after 1 second\n                setTimeout(function(){\n\n                    // empty logger\n                    $('.logger', form).empty();\n\n                    // hide progress table row\n                    $('.progress-row', form).addClass('row-hide');\n\n                    // reveal progress and logger table rows\n                    $('.logger-row', form).removeClass('row-hide');\n\n                    // unknown error log\n                    data.log = 'An unknown problem has occurred!'\n\n                    // hide update products json progress bar\n                    logger('error', data);\n\n                },1000);\n\n            }\n\n        // done response\n        }).done(function (response) {\n\n            // if response is success\n            if (response.success) {\n\n                // let our response data\n                let data = response.data;\n\n                // and we are done\n                if(data.done) {\n\n                    // log our process is complete\n                    logger('done', data);\n\n                    // change progress bar color to green\n                    $('.progress', form).addClass('progress-done');\n\n                    // re-enable submit button\n                    $('[type=\"submit\"]', form).prop('disabled',false);\n\n                }\n\n            }\n\n        });\n\n    }\n\n    /**\n     * logger function to log process data\n     * @param status\n     * @param data\n     */\n    function logger(status, data = false) {\n\n        // get logger object\n        let logger = $('.logger',form);\n\n        // if status is success\n        if(status === 'success') {\n\n            // each log entry\n            $.each(data.log, function(post_id, $post_data) {\n\n                // if result is success\n                if($post_data.result) {\n\n                    // log our success message\n                    $(logger).append('<strong>' + data.props.post_type + '</strong> <a href=\"' + $post_data.edit_link + '\" target=\"_blank\" class=\"log-text-success\">#' + post_id + '</a> post thumbnail has been set with acf image field <strong>' + data.props.acf_image_field + '</strong> attachment.' + \"<br/>\");\n\n                } else {\n\n                    // log our failed message\n                    $(logger).append('<strong>' + data.props.post_type + '</strong> <a href=\"' + $post_data.edit_link + '\" target=\"_blank\" class=\"log-text-error\">#' + post_id + '</a> acf image field <strong>' + data.props.acf_image_field + '</strong> had no attachment id set.' + \"<br/>\");\n\n                }\n\n            });\n\n        // if status is done\n        } else if (status === 'done') {\n\n            // log our process done message\n            $(logger).append('<strong class=\"log-text-done\">Process complete.</strong>' + \"<br/>\");\n\n        // if status is error\n        } else if (status === 'error') {\n\n            // if we have data log\n            if(data.log) {\n\n                // log our error message\n                $(logger).append(data.log + \"<br/>\");\n\n            }\n\n        }\n\n        // animate scroll to bottom of logger after new logs are appended\n        $(logger).animate({\n\n            // logger scroll top position\n            scrollTop: logger.prop(\"scrollHeight\")\n\n        // animate options\n        },{\n            duration: 250,\n            easing: 'linear'\n        });\n\n    }\n\n})(jQuery);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t522: 0,\n\t222: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [222], () => (__webpack_require__(349)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [222], () => (__webpack_require__(498)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","$","form","data","props","process_images","init","count","processed","exclude","done","ajax","cache","timeout","url","ajaxurl","method","action","security","acf_img_set_post_thumb_nonce","success","response","prop","empty","html","removeClass","progress_percent","Math","round","width","text","logger","addClass","error","setTimeout","log","status","each","post_id","$post_data","result","append","post_type","edit_link","acf_image_field","animate","scrollTop","duration","easing","on","e","preventDefault","FormData","this","Object","fromEntries","hasOwn","confirm","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","key","splice","r","o","obj","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}